/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import conexao.ConexaoDB;
import controller.ProdutoController;
import exception.NomeVazioException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Willey
 */
public class Produtos extends javax.swing.JFrame {

    /**
     * Creates new form Produtos
     */
    
    ProdutoController controller = new ProdutoController();
    
    public Produtos() {
        initComponents();
        carregaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cadastrotextoLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nomeText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        descricaoText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        precoText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        categoriaText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        produtosTable = new javax.swing.JTable();
        novoButton = new javax.swing.JButton();
        salvarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        excluirButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();
        voltarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cadastrotextoLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        cadastrotextoLabel.setText("Tela de Cadastro de Produtos");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Nome");

        nomeText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nomeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTextActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Descrição");

        descricaoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        descricaoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descricaoTextActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Preço");

        precoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Categoria");

        categoriaText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        produtosTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        produtosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descrição", "Categoria", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        produtosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                produtosTabelaSeleciona(evt);
            }
        });
        jScrollPane1.setViewportView(produtosTable);

        novoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        novoButton.setText("NOVO");
        novoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoButtonActionPerformed(evt);
            }
        });

        salvarButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salvarButton.setText("SALVAR");
        salvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarButtonActionPerformed(evt);
            }
        });

        editarButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        editarButton.setText("EDITAR");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        excluirButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        excluirButton.setText("EXCLUIR");
        excluirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirButtonActionPerformed(evt);
            }
        });

        limparButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        limparButton.setText("LIMPAR");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparButtonActionPerformed(evt);
            }
        });

        voltarButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        voltarButton.setText("VOLTAR");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(novoButton)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addComponent(limparButton)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addComponent(salvarButton)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addComponent(editarButton)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addComponent(excluirButton))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(descricaoText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(categoriaText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(precoText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addComponent(cadastrotextoLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(voltarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(voltarButton)
                .addGap(14, 14, 14)
                .addComponent(cadastrotextoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(descricaoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(categoriaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(precoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novoButton)
                    .addComponent(salvarButton)
                    .addComponent(editarButton)
                    .addComponent(excluirButton)
                    .addComponent(limparButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpaCampos() {
        nomeText.setText("");
        descricaoText.setText("");
        categoriaText.setText("");
        precoText.setText("");
    }
    
    private void carregaTabela() {
        DefaultTableModel tabelaProdutos = (DefaultTableModel) produtosTable.getModel();
        tabelaProdutos.setNumRows(0);
        ResultSet rs;
        ConexaoDB connection;
        String sql;
        PreparedStatement stmt;
        
        produtosTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        produtosTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        produtosTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        produtosTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        produtosTable.getColumnModel().getColumn(4).setPreferredWidth(30);
        
        try {
            connection = new ConexaoDB();
            sql = "select * from produtos order by id asc";
            stmt = connection.prepareStatement(sql);
            rs = stmt.executeQuery();
            
            while(rs.next()) {
                tabelaProdutos.addRow(new Object[] {
                   rs.getInt(1),
                   rs.getString(2),
                   rs.getString(3),
                   rs.getString(4),
                   rs.getDouble(5)
                });
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados da tabela de produtos!");
        }
    }
    
    private void nomeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTextActionPerformed

    private void descricaoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descricaoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descricaoTextActionPerformed

    private void produtosTabelaSeleciona(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_produtosTabelaSeleciona
        // TODO add your handling code here:
        int row = produtosTable.getSelectedRow();
        if(row>=0) {
            int id = (int) produtosTable.getValueAt(row, 0);
            String nome = (String) produtosTable.getValueAt(row, 1);
            String descricao = (String) produtosTable.getValueAt(row, 2);
            String categoria = (String) produtosTable.getValueAt(row, 3);
            double preco = (double) produtosTable.getValueAt(row, 4);
            nomeText.setText(nome);
            descricaoText.setText(descricao);
            categoriaText.setText(categoria);
            precoText.setText(Double.toString(preco));
            controller.produtoSelect(id, nome, descricao, categoria, preco);
        }
    }//GEN-LAST:event_produtosTabelaSeleciona

    private void novoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoButtonActionPerformed
        // TODO add your handling code here:
        controller.produtoSelect();
        limpaCampos();
    }//GEN-LAST:event_novoButtonActionPerformed

    private void salvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarButtonActionPerformed
        // TODO add your handling code here:

        String nome = nomeText.getText();
        String descricao = descricaoText.getText();
        String categoria = categoriaText.getText();
        double preco = 0;
        try {
            preco = Double.parseDouble(precoText.getText());
            if(nome.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome do produto não pode ser vazio!");
                nomeText.requestFocus();
            } else if(descricao.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Descrição do produto não pode ser vazio!");
                descricaoText.requestFocus();
            } else if(categoria.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Categoria do produto não pode ser vazio!");
                categoriaText.requestFocus();
            } else {
                controller.cadastrarProduto(nome,descricao,categoria,preco);
                carregaTabela();
                limpaCampos();
                JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso!");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Insira um valor númerico no campo preço!");
            precoText.requestFocus();
        }
    }//GEN-LAST:event_salvarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        String nome = nomeText.getText();
        String descricao = descricaoText.getText();
        String categoria = categoriaText.getText();
        if(nome.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nome do produto não pode ser vazio!");
            nomeText.requestFocus();
        } else if(descricao.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Descrição do produto não pode ser vazio!");
            descricaoText.requestFocus();
        } else if(categoria.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Categoria do produto não pode ser vazio!");
            categoriaText.requestFocus();
        } else {
            try {
                double preço = Double.parseDouble(precoText.getText());
                controller.editarProduto(nome, descricao, categoria, preço);
                carregaTabela();
                JOptionPane.showMessageDialog(null, "Produto editado com sucesso!");
            } catch(NomeVazioException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Insira um valor númerico no campo preço!");
                precoText.requestFocus();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    private void excluirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirButtonActionPerformed
        // TODO add your handling code here:
        try {
            controller.excluirProduto();
            carregaTabela();
            JOptionPane.showMessageDialog(null, "Produto excluido com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_excluirButtonActionPerformed

    private void limparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparButtonActionPerformed
        // TODO add your handling code here:
        limpaCampos();
    }//GEN-LAST:event_limparButtonActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_voltarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Produtos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cadastrotextoLabel;
    private javax.swing.JTextField categoriaText;
    private javax.swing.JTextField descricaoText;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton excluirButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparButton;
    private javax.swing.JTextField nomeText;
    private javax.swing.JButton novoButton;
    private javax.swing.JTextField precoText;
    private javax.swing.JTable produtosTable;
    private javax.swing.JButton salvarButton;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
