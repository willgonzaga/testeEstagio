/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import conexao.ConexaoDB;
import controller.VendaController;
import controller.VendaItemController;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import model.Cliente;
import model.Produto;
import view.vendasmodels.BuscarProduto;
import view.vendasmodels.BuscarCliente;

/**
 *
 * @author Willey
 */
public class Vendas extends javax.swing.JFrame {

    /**
     * Creates new form Venda
     */
    
    Cliente clienteSelecionado;
    Produto produtoSelecionado;
    BuscarCliente buscarCliente;
    BuscarProduto buscarProduto;
    VendaController controller = new VendaController();
    VendaItemController controllerItemVenda = new VendaItemController();
    private int idVendaSelecionada = 0;
    private int idItemVendaSelecionado = 0;
    
    public Vendas() {
        initComponents();
        carregaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idVendaText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        procuraClienteButton = new javax.swing.JButton();
        clienteVendaText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pagamentoCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        vendasTable = new javax.swing.JTable();
        novoVendaButton = new javax.swing.JButton();
        limparVendaButton = new javax.swing.JButton();
        salvarVendaButton = new javax.swing.JButton();
        editarVendaButton = new javax.swing.JButton();
        excluirVendaButton = new javax.swing.JButton();
        voltarButton = new javax.swing.JButton();
        dataVendaText = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nomeProdutoText = new javax.swing.JTextField();
        buscarProdutoButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        produtosVendaTable = new javax.swing.JTable();
        novoProdutoButton = new javax.swing.JButton();
        salvarProdutoButton = new javax.swing.JButton();
        excluirProdutoButton = new javax.swing.JButton();
        editarProdutoButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        descricaoProdutoText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        categoriaProdutoText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        precoProdutoText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        idTelaVendaProdutoText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        quantidadeProdutoVendaText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        precoTotalProdutoVendaText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                ganhouFoco(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("Tela de Vendas");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Número da venda");

        idVendaText.setEditable(false);
        idVendaText.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Cliente");

        procuraClienteButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        procuraClienteButton.setText("BUSCAR CLIENTE");
        procuraClienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procuraClienteButtonActionPerformed(evt);
            }
        });

        clienteVendaText.setEditable(false);
        clienteVendaText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Data da venda");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Forma de Pagamento");

        pagamentoCombo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pagamentoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Pix", "Cartão de Crédito", "Cartão de Débito", "Boleto" }));
        pagamentoCombo.setSelectedIndex(-1);

        vendasTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        vendasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero da Venda", "Cliente", "Valor total", "Data", "Forma de Pagamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vendasTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selecionaVenda(evt);
            }
        });
        jScrollPane1.setViewportView(vendasTable);

        novoVendaButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        novoVendaButton.setText("NOVO");
        novoVendaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoVendaButtonActionPerformed(evt);
            }
        });

        limparVendaButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        limparVendaButton.setText("LIMPAR");
        limparVendaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparVendaButtonActionPerformed(evt);
            }
        });

        salvarVendaButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salvarVendaButton.setText("SALVAR");
        salvarVendaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarVendaButtonActionPerformed(evt);
            }
        });

        editarVendaButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        editarVendaButton.setText("EDITAR");
        editarVendaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarVendaButtonActionPerformed(evt);
            }
        });

        excluirVendaButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        excluirVendaButton.setText("EXCLUIR");
        excluirVendaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirVendaButtonActionPerformed(evt);
            }
        });

        voltarButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        voltarButton.setText("VOLTAR");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });

        try {
            dataVendaText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataVendaText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(novoVendaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(limparVendaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salvarVendaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editarVendaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(excluirVendaButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(voltarButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clienteVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(procuraClienteButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pagamentoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 139, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(voltarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(procuraClienteButton)
                    .addComponent(clienteVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(pagamentoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(novoVendaButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(limparVendaButton)
                        .addComponent(salvarVendaButton)
                        .addComponent(editarVendaButton)
                        .addComponent(excluirVendaButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vendas", jPanel1);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Tela de Itens da Venda");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Nome do Produto");

        nomeProdutoText.setEditable(false);
        nomeProdutoText.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        nomeProdutoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeProdutoTextActionPerformed(evt);
            }
        });

        buscarProdutoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        buscarProdutoButton.setText("BUSCAR PRODUTO");
        buscarProdutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarProdutoButtonActionPerformed(evt);
            }
        });

        produtosVendaTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        produtosVendaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descrição", "Categoria", "Preço unitario", "Quantidade", "Preço total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        produtosVendaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selecionaProdutoVenda(evt);
            }
        });
        jScrollPane2.setViewportView(produtosVendaTable);

        novoProdutoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        novoProdutoButton.setText("NOVO");
        novoProdutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoProdutoButtonActionPerformed(evt);
            }
        });

        salvarProdutoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salvarProdutoButton.setText("SALVAR");
        salvarProdutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarProdutoButtonActionPerformed(evt);
            }
        });

        excluirProdutoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        excluirProdutoButton.setText("EXCLUIR");
        excluirProdutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirProdutoButtonActionPerformed(evt);
            }
        });

        editarProdutoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        editarProdutoButton.setText("EDITAR");
        editarProdutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarProdutoButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Descrição do Produto");

        descricaoProdutoText.setEditable(false);
        descricaoProdutoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Categoria do Produto");

        categoriaProdutoText.setEditable(false);
        categoriaProdutoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Preço unitario do Produto");

        precoProdutoText.setEditable(false);
        precoProdutoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Número da venda");

        idTelaVendaProdutoText.setEditable(false);
        idTelaVendaProdutoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        idTelaVendaProdutoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTelaVendaProdutoTextActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Quantidade");

        quantidadeProdutoVendaText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        quantidadeProdutoVendaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeProdutoVendaTextActionPerformed(evt);
            }
        });
        quantidadeProdutoVendaText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                digitarQuantidade(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                digitarQuantidade(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                digitarQuantidade(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Preço total do produto");

        precoTotalProdutoVendaText.setEditable(false);
        precoTotalProdutoVendaText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(novoProdutoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salvarProdutoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editarProdutoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(excluirProdutoButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descricaoProdutoText))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buscarProdutoButton)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoriaProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidadeProdutoVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoTotalProdutoVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTelaVendaProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(idTelaVendaProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nomeProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarProdutoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(descricaoProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(categoriaProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(precoProdutoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(quantidadeProdutoVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(precoTotalProdutoVendaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novoProdutoButton)
                    .addComponent(excluirProdutoButton)
                    .addComponent(editarProdutoButton)
                    .addComponent(salvarProdutoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Itens da venda", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpaCampos() {
        idVendaText.setText("");
        clienteVendaText.setText("");
        dataVendaText.setText("");
        pagamentoCombo.setSelectedIndex(-1);
    }
    
    public void limpaCamposItemVenda() {
        nomeProdutoText.setText("");
        descricaoProdutoText.setText("");
        categoriaProdutoText.setText("");
        precoProdutoText.setText("");
        quantidadeProdutoVendaText.setText("");
        precoTotalProdutoVendaText.setText("");
    }
    
    private void novoVendaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoVendaButtonActionPerformed
        // TODO add your handling code here:
        controller.vendaSelect();
        limpaCampos();
    }//GEN-LAST:event_novoVendaButtonActionPerformed

    private void salvarProdutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarProdutoButtonActionPerformed
        // TODO add your handling code here:
        try {
            int idVenda = Integer.parseInt(idTelaVendaProdutoText.getText());
            int idProduto = produtoSelecionado.getId();
            int qtde = Integer.parseInt(quantidadeProdutoVendaText.getText());
            controllerItemVenda.salvarItemVenda(idVenda, idProduto, qtde);
            carregaTabelaProdutosVenda();
            JOptionPane.showMessageDialog(null, "Item inserido com sucesso na venda!");
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Digite uma quantidade numérica valida");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_salvarProdutoButtonActionPerformed

    private void carregaTabela() {
        SimpleDateFormat formatoOriginal = new SimpleDateFormat("dd/MM/yyyy");;
        DefaultTableModel tabelaVendas = (DefaultTableModel) vendasTable.getModel();
        tabelaVendas.setNumRows(0);
        ResultSet rs;
        ConexaoDB connection;
        String sql;
        PreparedStatement stmt;
        
        vendasTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        vendasTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        vendasTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        vendasTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        vendasTable.getColumnModel().getColumn(4).setPreferredWidth(30);
        
        try {
            connection = new ConexaoDB();
            sql = "select "
                    + "vendas.id, "
                    + "clientes.nome, "
                    + "vendas.totalvenda, "
                    + "vendas.datavenda, "
                    + "vendas.formadepagamento "
                    + "from vendas "
                    + "inner join clientes "
                    + "on vendas.idcliente = clientes.id "
                    + "order by vendas.id desc";
            stmt = connection.prepareStatement(sql);
            rs = stmt.executeQuery();
            while(rs.next()) {
                tabelaVendas.addRow(new Object[] {
                   rs.getInt(1),
                   rs.getString(2),
                   rs.getDouble(3),
                   formatoOriginal.format(rs.getDate(4)),
                   rs.getString(5)
                });
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados da tabela de vendas!");
        }
    }
    
    private void carregaTabelaProdutosVenda() {
        DefaultTableModel tabelaProdutosVendas = (DefaultTableModel) produtosVendaTable.getModel();
        tabelaProdutosVendas.setNumRows(0);
        ResultSet rs;
        ConexaoDB connection;
        String sql;
        PreparedStatement stmt;
        
        produtosVendaTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        produtosVendaTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        produtosVendaTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        produtosVendaTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        produtosVendaTable.getColumnModel().getColumn(4).setPreferredWidth(30);
        produtosVendaTable.getColumnModel().getColumn(5).setPreferredWidth(30);
        produtosVendaTable.getColumnModel().getColumn(6).setPreferredWidth(30);
        
        try {
            connection = new ConexaoDB();
            sql = "select "
                    + "vendas_item.iditem, "
                    + "produtos.nome, produtos.descricao, "
                    + "produtos.categoria, "
                    + "produtos.preco, "
                    + "vendas_item.qtde, "
                    + "produtos.preco * vendas_item.qtde "
                    + "from vendas_item "
                    + "join produtos "
                    + "on vendas_item.idproduto = produtos.id "
                    + "where vendas_item.idvenda = ? "
                    + "order by vendas_item.iditem desc;";
            stmt = connection.prepareStatement(sql);
            stmt.setInt(1, idVendaSelecionada);
            rs = stmt.executeQuery();
            while(rs.next()) {
                tabelaProdutosVendas.addRow(new Object[] {
                   rs.getInt(1),
                   rs.getString(2),
                   rs.getString(3),
                   rs.getString(4),
                   rs.getDouble(5),
                   rs.getInt(6),
                   rs.getDouble(7)
                });
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados da tabela de vendas!");
        }
    }
    
    private void procuraClienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procuraClienteButtonActionPerformed
        // TODO add your handling code here:
        clienteVendaText.setText("");
        buscarCliente = new BuscarCliente();
        buscarCliente.setVisible(true);
        
    }//GEN-LAST:event_procuraClienteButtonActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_voltarButtonActionPerformed

    private void ganhouFoco(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ganhouFoco
        // TODO add your handling code here:
        try {
            clienteSelecionado = buscarCliente.clienteSelecionado;
            clienteVendaText.setText(clienteSelecionado.getNome());
        } catch(NullPointerException e) {
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            produtoSelecionado = buscarProduto.produtoSelecionado;
            nomeProdutoText.setText(produtoSelecionado.getNome());
            descricaoProdutoText.setText(produtoSelecionado.getDescricao());
            categoriaProdutoText.setText(produtoSelecionado.getCategoria());
            precoProdutoText.setText(Double.toString(produtoSelecionado.getPreco()));
            int quantidade = (quantidadeProdutoVendaText.getText().trim().isEmpty()) ? 1 : Integer.parseInt(quantidadeProdutoVendaText.getText());
            precoTotalProdutoVendaText.setText(Double.toString(Double.parseDouble(precoProdutoText.getText()) * quantidade));
        } catch(NullPointerException e) {
        } catch(NumberFormatException e) {
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ganhouFoco

    private void salvarVendaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarVendaButtonActionPerformed
        // TODO add your handling code here:
        try {
            int idcliente = clienteSelecionado.getId();
            SimpleDateFormat formatoOriginal = new SimpleDateFormat("dd-MM-yyyy");
            SimpleDateFormat formatoBanco = new SimpleDateFormat("yyyy-MM-dd");

            try {
                Date data = formatoOriginal.parse(dataVendaText.getText().replace("/", "-"));
                Date dataFormatada = formatoBanco.parse(formatoBanco.format(data));
                try {
                    String formapagamento = pagamentoCombo.getSelectedItem().toString();
                    controller.salvarVenda(idcliente, dataFormatada, formapagamento);
                    carregaTabela();
                    JOptionPane.showMessageDialog(null, "Venda cadastrada com sucesso!");
                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(null, "Selecione uma forma de pagamento!");
                }
            } catch(ParseException e) {
                JOptionPane.showMessageDialog(null, "Digite uma data valida!");
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente para a venda!");
        }
    }//GEN-LAST:event_salvarVendaButtonActionPerformed

    private void selecionaVenda(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selecionaVenda
        // TODO add your handling code here:
        int row = vendasTable.getSelectedRow();
        SimpleDateFormat formatoOriginal = new SimpleDateFormat("dd-MM-yyyy");;
        SimpleDateFormat formatoBanco = new SimpleDateFormat("yyyy-MM-dd");
        
        if(row>=0) {
            int id = (int) vendasTable.getValueAt(row, 0);
            String nomecliente = (String) vendasTable.getValueAt(row, 1);
            String datavenda = (String) vendasTable.getValueAt(row, 3);
            String formapagamento = (String) vendasTable.getValueAt(row, 4);
            idVendaText.setText(Integer.toString(id));
            clienteVendaText.setText(nomecliente);
            dataVendaText.setText(datavenda);
            try {
                Date data = formatoOriginal.parse(datavenda.replace("/", "-"));
                Date dataVendaFormatada = formatoBanco.parse(formatoBanco.format(data));
                pagamentoCombo.setSelectedItem(formapagamento);
                controller.vendaSelect(dataVendaFormatada, id, formapagamento);
                idVendaSelecionada = id;
                idTelaVendaProdutoText.setText(Integer.toString(id));
                carregaTabelaProdutosVenda();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_selecionaVenda

    private void limparVendaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparVendaButtonActionPerformed
        // TODO add your handling code here:
        limpaCampos();
    }//GEN-LAST:event_limparVendaButtonActionPerformed

    private void editarVendaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarVendaButtonActionPerformed
        // TODO add your handling code here:                        
        ConexaoDB connection;
        String sql;
        PreparedStatement stmt;
        ResultSet rs;
        int idcliente = 0;
        int idvenda = 0;
        
        try {
            idcliente = clienteSelecionado.getId();
            idvenda = Integer.parseInt(idVendaText.getText());
        } catch (NullPointerException e) {
            try {
                connection = new ConexaoDB();
                idvenda = Integer.parseInt(idVendaText.getText());
                sql = "select idcliente from vendas where id = ?";
                stmt = connection.prepareStatement(sql);
                stmt.setInt(1, idvenda);
                rs = stmt.executeQuery();
                while(rs.next()) {
                    idcliente = rs.getInt(1);
                }
                stmt.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Selecione uma venda para editar!");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Selecione uma venda para editar!");
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        editaVenda(idcliente, idvenda);
    }//GEN-LAST:event_editarVendaButtonActionPerformed

    private void editaVenda(int idcliente, int idvenda) {
        try {
            SimpleDateFormat formatoOriginal = new SimpleDateFormat("dd-MM-yyyy");
            SimpleDateFormat formatoBanco = new SimpleDateFormat("yyyy-MM-dd");
            Date data = formatoOriginal.parse(dataVendaText.getText().replace("/", "-"));
            Date dataFormatada = formatoBanco.parse(formatoBanco.format(data));
            try {
                String formapagamento = pagamentoCombo.getSelectedItem().toString();
                controller.editarVenda(idcliente, dataFormatada, formapagamento, idvenda);
                carregaTabela();
                JOptionPane.showMessageDialog(null, "Venda editada com sucesso!");
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Selecione uma forma de pagamento!");
            }
        } catch(ParseException e) {
            JOptionPane.showMessageDialog(null, "Digite uma data valida!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void excluirVendaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirVendaButtonActionPerformed
        // TODO add your handling code here:
        try {
            controller.excluirVenda();
            carregaTabela();
            JOptionPane.showMessageDialog(null, "Venda excluido com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_excluirVendaButtonActionPerformed

    private void buscarProdutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarProdutoButtonActionPerformed
        // TODO add your handling code here:
        nomeProdutoText.setText("");
        buscarProduto = new BuscarProduto();
        buscarProduto.setVisible(true);
    }//GEN-LAST:event_buscarProdutoButtonActionPerformed

    private void idTelaVendaProdutoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTelaVendaProdutoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTelaVendaProdutoTextActionPerformed

    private void nomeProdutoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeProdutoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeProdutoTextActionPerformed

    private void selecionaProdutoVenda(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selecionaProdutoVenda
        // TODO add your handling code here:
        int row = produtosVendaTable.getSelectedRow();
        
        if(row>=0) {
            int id = (int) produtosVendaTable.getValueAt(row, 0);
            idItemVendaSelecionado = id;
            String nomeProduto = (String) produtosVendaTable.getValueAt(row, 1);
            String descricaoProduto = (String) produtosVendaTable.getValueAt(row, 2);
            String categoriaProduto = (String) produtosVendaTable.getValueAt(row, 3);
            double precoUnitarioProduto = (double) produtosVendaTable.getValueAt(row, 4);
            int quantidadeProduto = (int) produtosVendaTable.getValueAt(row, 5);
            double precoTotalProduto = (double) produtosVendaTable.getValueAt(row, 6);
            nomeProdutoText.setText(nomeProduto);
            descricaoProdutoText.setText(descricaoProduto);
            categoriaProdutoText.setText(categoriaProduto);
            precoProdutoText.setText(Double.toString(precoUnitarioProduto));
            quantidadeProdutoVendaText.setText(Integer.toString(quantidadeProduto));
            precoTotalProdutoVendaText.setText(Double.toString(precoTotalProduto));
            
            try {
                controllerItemVenda.itemSelect(id,quantidadeProduto);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_selecionaProdutoVenda

    private void quantidadeProdutoVendaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeProdutoVendaTextActionPerformed
        // TODO add your handling code here:
        int quantidade = (quantidadeProdutoVendaText.getText().trim().isEmpty()) ? 1 : Integer.parseInt(quantidadeProdutoVendaText.getText());
        precoTotalProdutoVendaText.setText(Double.toString(Double.parseDouble(precoProdutoText.getText()) * quantidade));
    }//GEN-LAST:event_quantidadeProdutoVendaTextActionPerformed

    private void novoProdutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoProdutoButtonActionPerformed
        // TODO add your handling code here:        
        controllerItemVenda.itemSelect();
        limpaCamposItemVenda();
    }//GEN-LAST:event_novoProdutoButtonActionPerformed

    private void digitarQuantidade(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_digitarQuantidade
        // TODO add your handling code here:
        try {
            int quantidade = (quantidadeProdutoVendaText.getText().trim().isEmpty()) ? 1 : Integer.parseInt(quantidadeProdutoVendaText.getText());
            precoTotalProdutoVendaText.setText(Double.toString(Double.parseDouble(precoProdutoText.getText()) * quantidade));
        } catch (NumberFormatException e) {
            
        }
    }//GEN-LAST:event_digitarQuantidade

    private void editarProdutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarProdutoButtonActionPerformed
        // TODO add your handling code here:
        ConexaoDB connection;
        String sql;
        PreparedStatement stmt;
        ResultSet rs;
        int idItem = 0;
        int idVenda = 0;
        int idProduto = 0;
        
        try {
            idItem = controllerItemVenda.infoItemSelect().getIdItem();
            try {
                idVenda = Integer.parseInt(idTelaVendaProdutoText.getText());
                try {
                    int qtde = Integer.parseInt(quantidadeProdutoVendaText.getText());
                    try {
                        idProduto = produtoSelecionado.getId();
                    } catch (NullPointerException e) {
                        connection = new ConexaoDB();
                        idVenda = Integer.parseInt(idVendaText.getText());
                        sql = "select idproduto from vendas_item where iditem = ?";
                        stmt = connection.prepareStatement(sql);
                        stmt.setInt(1, idItem);
                        rs = stmt.executeQuery();
                        while(rs.next()) {
                            idProduto = rs.getInt(1);
                        }
                        stmt.close();
                    }
                    controllerItemVenda.editarItemVenda(idItem,idVenda,idProduto,qtde);
                    carregaTabelaProdutosVenda();
                    JOptionPane.showMessageDialog(null, "Item editado com sucesso!");
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }  catch (Exception ex) {
                    ex.printStackTrace();
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Digite uma quantidade numérica valida!");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Selecione um item para editar!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_editarProdutoButtonActionPerformed

    private void excluirProdutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirProdutoButtonActionPerformed
        // TODO add your handling code here:        
        if(!idTelaVendaProdutoText.getText().trim().isEmpty()) {
            try {
                controllerItemVenda.excluirItemVenda();
                carregaTabelaProdutosVenda();
                JOptionPane.showMessageDialog(null, "Item excluido com sucesso!");
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Selecione um item para excluir!");
            }
        }
    }//GEN-LAST:event_excluirProdutoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarProdutoButton;
    private javax.swing.JTextField categoriaProdutoText;
    private javax.swing.JTextField clienteVendaText;
    private javax.swing.JFormattedTextField dataVendaText;
    private javax.swing.JTextField descricaoProdutoText;
    private javax.swing.JButton editarProdutoButton;
    private javax.swing.JButton editarVendaButton;
    private javax.swing.JButton excluirProdutoButton;
    private javax.swing.JButton excluirVendaButton;
    private javax.swing.JTextField idTelaVendaProdutoText;
    private javax.swing.JTextField idVendaText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limparVendaButton;
    private javax.swing.JTextField nomeProdutoText;
    private javax.swing.JButton novoProdutoButton;
    private javax.swing.JButton novoVendaButton;
    private javax.swing.JComboBox<String> pagamentoCombo;
    private javax.swing.JTextField precoProdutoText;
    private javax.swing.JTextField precoTotalProdutoVendaText;
    private javax.swing.JButton procuraClienteButton;
    private javax.swing.JTable produtosVendaTable;
    private javax.swing.JTextField quantidadeProdutoVendaText;
    private javax.swing.JButton salvarProdutoButton;
    private javax.swing.JButton salvarVendaButton;
    private javax.swing.JTable vendasTable;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
